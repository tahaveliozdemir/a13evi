rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check file size (max 5MB)
    function isValidSize() {
      return request.resource.size < 5 * 1024 * 1024;
    }

    // Helper function to check if file is an image
    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }

    // Child profile pictures
    match /child-photos/{childId}/{fileName} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && isImage() && isValidSize();
      allow delete: if isSignedIn();
    }

    // Reports and exports
    match /reports/{userId}/{fileName} {
      allow read: if isSignedIn() && request.auth.uid == userId;
      allow write: if isSignedIn() && request.auth.uid == userId && isValidSize();
      allow delete: if isSignedIn() && request.auth.uid == userId;
    }

    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
